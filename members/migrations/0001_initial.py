# Generated by Django 5.1.4 on 2025-04-21 15:14

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import members.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Message',
            fields=[
                ('message_id', models.UUIDField(default=members.models.generate_unique_id, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=100)),
                ('message', models.TextField()),
            ],
            options={
                'db_table': 'messages',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('noty_id', models.UUIDField(default=members.models.generate_unique_id, editable=False, primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('date_notified', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Paying',
            fields=[
                ('id', models.UUIDField(default=members.models.generate_unique_id, editable=False, primary_key=True, serialize=False)),
                ('username', models.UUIDField()),
                ('phone_number', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'payments',
            },
        ),
        migrations.CreateModel(
            name='Paymentcode',
            fields=[
                ('pay_id', models.UUIDField(default=members.models.generate_unique_id, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=150)),
                ('amount', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=members.models.generate_unique_id, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(default=228025, max_length=100, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'members',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DepositHistory',
            fields=[
                ('deposit_id', models.UUIDField(default=members.models.generate_unique_id, editable=False, primary_key=True, serialize=False)),
                ('amount', models.IntegerField()),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deposit_history', to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
            options={
                'db_table': 'deposit',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('buyerid', models.UUIDField(default=members.models.generate_unique_id, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(default=members.models.generate_unique_id, max_length=200)),
                ('account', models.IntegerField(default=0, verbose_name='account(Ksh)')),
                ('phone_number', models.IntegerField(default='0700000000')),
                ('country', models.CharField(default='Kenya', max_length=100)),
                ('city', models.CharField(default='mombasa', max_length=100)),
                ('profile_pic', models.ImageField(default='profile_pics/download.png', upload_to='profile_pics/')),
                ('user', models.OneToOneField(default='false', on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'profile',
            },
        ),
        migrations.CreateModel(
            name='Error',
            fields=[
                ('error_id', models.UUIDField(default=members.models.generate_unique_id, primary_key=True, serialize=False)),
                ('error_details', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='errors', to='members.profile')),
            ],
            options={
                'db_table': 'errors',
            },
        ),
        migrations.CreateModel(
            name='Purchased',
            fields=[
                ('purchase_id', models.UUIDField(default=members.models.generate_unique_id, editable=False, primary_key=True, serialize=False)),
                ('video_id', models.UUIDField()),
                ('video_name', models.CharField(max_length=150)),
                ('image_url', models.URLField(default='https://images.unsplash.com/photo-1604545200457-63641121af3b?w=400&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTF8fGRhcmVkZXZpbHxlbnwwfHwwfHx8MA%3D%3D')),
                ('price', models.IntegerField()),
                ('purchase_time', models.DateField(auto_now_add=True)),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase', to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
            options={
                'db_table': 'purchased',
            },
        ),
    ]
